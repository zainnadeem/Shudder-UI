//
//  MainFeedWorker.swift
//  Shudder
//
//  Created by Zain N. on 10/23/18.
//  Copyright (c) 2018 Mapfit. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import SDWebImage

class MainFeedWorker
{
    func performFlickrSearch(request: MainFeed.Data.Request, completion: @escaping (_ result: MainFeed.Data.Response)->Void) {
        
        // Perform the request
        let session = URLSession.shared
        let apiKeyString = "58a2570fd84e48b780b4f1aa04ecd916"
        let baseURL = "https://api.flickr.com/services/rest?method=flickr.galleries.getPhotos&extras=url_m&format=json&nojsoncallback=1&gallery_id=5704-72157622566655097&api_key=\(apiKeyString)&extras=url_m"
        let url = URL(string: baseURL)!
        let request = URLRequest(url: url)
        let task = URLSession.shared.dataTask(with: request) { (data, response, error) in
            if let err = error {
                print("Could not complete the request \(error?.localizedDescription)")
            } else {
            }
            
            let parsedResult = try! JSONSerialization.jsonObject(with: data!, options: JSONSerialization.ReadingOptions.allowFragments)
            var imagesArray = [UIImage]()
            if let photosDictionary = (parsedResult as! [String : AnyObject])["photos"] {
                
                if let photoArray = photosDictionary.value(forKey: "photo") as? [[String: AnyObject]] {
                    
                    for photoDict in photoArray {
                        
                         let photoTitle = photoDict["title"] as? String
                         let imageUrlString = photoDict["url_m"] as? String
                         let url = URL(string: imageUrlString!)
                         let data = try? Data(contentsOf: url!) 
                        if let imageData = data {
                            imagesArray.append(UIImage(data: imageData)!)
                        }
                        
                    }
                    completion(MainFeed.Data.Response(images: imagesArray, responseCode: 200))
                } else {
                    print("Cant find key 'photo' in \(photosDictionary)")
                }
            } else {
                    print("Cant find key 'photos' in \(parsedResult)")
            }
        }
        task.resume()
  }
}

